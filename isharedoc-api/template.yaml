AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for iShareDoc API

Parameters:
  ImageUri:
    Type: String

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Metadata:
      DockerContext: ./
      Dockerfile: Dockerfile
    Properties:
      PackageType: Image
      ImageUri: !Ref ImageUri
      MemorySize: 512
      Timeout: 30
      AutoPublishAlias: live
      Environment:
        Variables:
          RUST_LOG: info
          ASYNC_INIT: true
          READINESS_CHECK_PATH: /health
          MY_AWS_TABLE_NAME: !Ref ApiTable
          MY_AWS_BUCKET_NAME: !Ref ApiBucket
          MY_AWS_SQS_URL: !Ref ApiQueue
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGW
            Path: /{proxy+}
            Method: ANY
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ApiQueue.Arn
        DynamoDbStreamEvent:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt ApiTable.StreamArn
            StartingPosition: LATEST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ApiTable
        - S3CrudPolicy:
            BucketName: !Ref ApiBucket
        - SQSSendMessagePolicy:
            QueueName: !GetAtt ApiQueue.QueueName
        - SQSPollerPolicy:
            QueueName: !GetAtt ApiQueue.QueueName
        - DynamoDBStreamReadPolicy:
            TableName: !Ref ApiTable
            StreamName: !Select [3, !Split ["/", !GetAtt ApiTable.StreamArn]]

  ## API Gateway
  ApiGW:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: !Sub "${AWS::StackName}-apigateway"
      StageName: "$default"
      CorsConfiguration:
        AllowMethods:
          - "*"
        AllowOrigins:
          - "*"  # Change in production
        AllowHeaders:
          - "*"

  ## DynamoDB Table
  ApiTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-table"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: file_id
          AttributeType: S
      KeySchema:
        - AttributeName: file_id
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: expires_at
        Enabled: true
      StreamSpecification:
        StreamViewType: OLD_IMAGE

  ## S3 Bucket
  ApiBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-bucket"
      LifecycleConfiguration:
        Rules:
          - Id: ExpireOldObjects
            Status: Enabled
            ExpirationInDays: 7
            Prefix: ""  # Applies to all objects
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - "*"  # Change in production
            AllowedMethods:
              - GET
              - PUT
              - HEAD
            AllowedHeaders:
              - "*"

  ## SQS Queue
  ApiQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-queue"
      VisibilityTimeout: 30

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ApiGW}.execute-api.${AWS::Region}.${AWS::URLSuffix}/"
  FunctionArn:
    Description: "Lambda function ARN"
    Value: !GetAtt ApiFunction.Arn
  TableName:
    Description: "DynamoDB table name"
    Value: !Ref ApiTable
  BucketName:
    Description: "S3 bucket name"
    Value: !Ref ApiBucket
  QueueUrl:
    Description: "SQS Queue URL"
    Value: !Ref ApiQueue
